version: 2.1

jobs:
  build-and-deploy:
    docker:
      - image: cimg/base:stable
    environment:
      ECR_REPO: myapp
    steps:
      - checkout

      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update -y
            sudo apt-get install -y unzip curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

      - run:
          name: Install Docker
          command: |
            sudo yum update -y || sudo apt-get update -y
            if ! command -v docker &> /dev/null; then
              sudo amazon-linux-extras enable docker || true
              sudo yum install -y docker || sudo apt-get install -y docker.io
              sudo service docker start || sudo systemctl start docker
            fi

      - run:
          name: Authenticate to ECR
          command: |
            docker_server="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
            aws ecr get-login-password --region "${AWS_REGION}" | docker login --username AWS --password-stdin "${docker_server}"

      - run:
          name: Build & Push Image
          command: |
            IMAGE_TAG="${CIRCLE_SHA1}"
            docker_server="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
            FULL_IMAGE="${docker_server}/${ECR_REPO}:${IMAGE_TAG}"

            echo "Building image: ${FULL_IMAGE}"
            docker build -t "${FULL_IMAGE}" .
            docker push "${FULL_IMAGE}"

      - run:
          name: Deploy to EC2 & Kubernetes
          command: |
            IMAGE_TAG="${CIRCLE_SHA1}"
            docker_server="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
            FULL_IMAGE="${docker_server}/${ECR_REPO}:${IMAGE_TAG}"

            echo "Deploying with image: ${FULL_IMAGE}"

            ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "
              set -e
              mkdir -p ~/k8s
              exit
            "
            scp -o StrictHostKeyChecking=no ./k8s/deployment.yaml ${EC2_USER}@${EC2_HOST}:~/k8s/deployment.yaml

            ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "
              set -e
              docker_server='${docker_server}'
              IMAGE_TAG='${IMAGE_TAG}'
              ECR_REPO='${ECR_REPO}'
              FULL_IMAGE='${FULL_IMAGE}'

              sed -i \"s#<AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/<ECR_REPO>:<IMAGE_TAG>#${FULL_IMAGE}#g\" ~/k8s/deployment.yaml

              kubectl apply -f ~/k8s/deployment.yaml
              kubectl apply -f ~/k8s/service.yaml

              echo 'Waiting for rollout...'
              kubectl rollout status deployment/webapp --timeout=180s
            "

workflows:
  deploy-workflow:
    jobs:
      - build-and-deploy