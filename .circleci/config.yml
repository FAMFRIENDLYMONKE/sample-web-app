version: 2.1

jobs:
  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout

      # Load private SSH key added in CircleCI settings
      - add_ssh_keys:
          fingerprints:
            - "AA:BB:CC:DD:EE:FF:11:22:33:44:55:66:77:88:99:00"   # <-- CHANGE to your SSH key fingerprint

      - run:
          name: Deploy on EC2 via SSH (passing all env vars)
          command: |
            ssh -tt -o StrictHostKeyChecking=no "${EC2_USER}@${EC2_HOST}" \<< 'EOF'
              set -euo pipefail

              # --- Pass CircleCI environment variables into the EC2 shell session ---
              export AWS_ACCOUNT_ID="${AWS_ACCOUNT_ID}"
              export AWS_REGION="${AWS_REGION}"
              export ECR_REPO="${ECR_REPO}"
              export IMAGE_TAG="${IMAGE_TAG:-${CIRCLE_SHA1}}"
              export KUBECONFIG="/home/${EC2_USER}/.kube/config"

              echo "Using image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}"

              # --- (Optional) AWS tools install if missing (EC2 IAM role provides credentials automatically) ---
              if ! command -v aws &>/dev/null; then
                sudo yum install -y awscli
              fi

              if ! command -v kubectl &>/dev/null; then
                echo "Installing kubectl..."
                curl -Lo kubectl "https://amazon-eks.s3.us-west-2.amazonaws.com/1.29.0/2024-03-27/bin/linux/amd64/kubectl"
                chmod +x kubectl
                sudo mv kubectl /usr/local/bin/
              fi

              # Optional: log into ECR (uses instance role)
              aws ecr get-login-password --region "${AWS_REGION}" \
                | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

              # --- Replace Docker image line in manifest using env vars locally on EC2 ---
              sed -i \
                "s#<AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/<ECR_REPO>:<IMAGE_TAG>#${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}#g" \
                /home/${EC2_USER}/k8s/deployment.yaml

              # --- Deploy to Kubernetes ---
              kubectl apply -f /home/${EC2_USER}/k8s/deployment.yaml
              kubectl apply -f /home/${EC2_USER}/k8s/service.yaml

              echo "Waiting for rollout..."
              kubectl rollout status deployment/webapp --timeout=300s

              echo "âœ… Deployment completed"
            EOF

workflows:
  deploy_on_main:
    jobs:
      - deploy:
          filters:
            branches:
              only: main